service: tripsha-app-api

plugins:
  - serverless-webpack
  # - serverless-domain-manager
  - serverless-plugin-split-stacks
  - serverless-offline
  - serverless-plugin-include-dependencies
custom:
  stage: ${opt:stage, self:provider.stage}
  # customDomain:
  #   domainName: ${self:provider.stage}-api.tripsha.com
  #   basePath: ''
  #   stage: ${self:provider.stage}
  #   createRoute53Record: true
  #   endpointType: 'REGIONAL'
  #   websockets:
  #     domainName: ${self:provider.stage}-api.tripsha.com
  #     basePath: ''
  #     createRoute53Record: true
  #     endpointType: 'REGIONAL'
  #     stage: '${self:provider.stage}'

  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

  splitStacks:
    nestedStackCount: 20
    perFunction: true
    perType: false
    perGroupFunction: true

  environment: ${file(env.yml):${self:custom.stage}, file(env.yml):default}

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  # vpc:
  #   securityGroupIds:
  #     - sg-067be5b7ef9f631a2
  #   subnetIds:
  #     - subnet-0803c091167df1253
  environment:
    DB_CONN: ${file(./config/${self:custom.stage}.json):DB_CONN}
    MAILCHIMP_INSTANCE: ${file(./config/${self:custom.stage}.json):MAILCHIMP_INSTANCE}
    MAILCHIMP_API_KEY: ${file(./config/${self:custom.stage}.json):MAILCHIMP_API_KEY}
    MAILCHIMP_AUDIENCE_LIST_ID: ${file(./config/${self:custom.stage}.json):MAILCHIMP_AUDIENCE_LIST_ID}
    STRIPE_SECRET_KEY: ${file(./config/${self:custom.stage}.json):STRIPE_SECRET_KEY}
    CLIENT_BASE_URL: ${file(./config/${self:custom.stage}.json):CLIENT_BASE_URL}
    ENV: ${self:custom.stage}
  iamRoleStatements:
    - Action:
        - 'cognito-idp:ListUsers'
        - 'cognito-idp:AdminCreateUser'
        - 'cognito-idp:AdminSetUserPassword'
      Resource:
        - 'arn:aws:cognito-idp:*'
      Effect: Allow
    - Effect: Allow
      Action:
        - 'execute-api:ManageConnections'
      Resource:
        - 'arn:aws:execute-api:*:*:**/@connections/*'
    - Effect: 'Allow'
      Action:
        - 'SES:*'
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:ses:'
            - Ref: AWS::Region
            - ':'
            - Ref: AWS::AccountId
            - ':identity/*'

package:
  individually: false
  excludeDevDependencies: true
  exclude:
    - 'node_modules/**' # no need to add this yourself, this plugin does it for you
    - 'tests/**'
    - 'tests-integration/**'
    - '.idea/**'
    - 'serverless-configs/**'
    - 'envs/**'
    - 'support/**'
    - '.vscode/**'
    - '.api-doc-dist/**'
    - 'scripts/**'
    - '.git/**'
    - '.nyc_output'
    - 'tmp/**'
    - 'coverage/**'
    - 'package-lock.json'
    - 'yarn.lock'
    - 'vpc.json'
    - 'test-api-call.sh'
    - '.prettirrc'
    - '.eslintrc*'
    - 'test-api-call.sh'

functions:
  - ${file(src/routes/index.yml)}
  - ${file(src/routes/users/functions.yml)}
  - ${file(src/routes/trips/functions.yml)}
  # - ${file(src/routes/trip-tags/functions.yml)}
  # - ${file(src/routes/tags/functions.yml)}
  # - ${file(src/routes/messages/functions.yml)}
  # - ${file(src/routes/countries/functions.yml)}
  # - ${file(src/routes/members/functions.yml)}
  # - ${file(src/routes/seeds/functions.yml)}
  # - ${file(src/routes/payments/functions.yml)}
  # - ${file(src/routes/bookings/functions.yml)}
  # - ${file(src/routes/hosts/functions.yml)}
  # - ${file(src/routes/activity-logs/functions.yml)}
  # - ${file(src/schedules/trips/functions.yml)}
  # - ${file(src/routes/migrations/functions.yml)}
  # - ${file(src/routes/approvals/functions.yml)}

resources:
  # API Gateway Errors
  - ${file(src/resources/api-gateway-errors.yml)}
  # # S3
  - ${file(src/resources/s3-bucket.yml)}
  # Cognito
  - ${file(src/resources/cognito-user-pool.yml)}
  - ${file(src/resources/cognito-identity-pool.yml)}
