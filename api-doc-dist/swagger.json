{
  "definitions": {
    "ErrorModel": {
      "type": "object",
      "required": [
        "status",
        "result"
      ],
      "properties": {
        "status": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "MessageModel": {
      "type": "object",
      "properties": {
        "to": {
          "type": "string",
          "description": "user id of reciever"
        },
        "from": {
          "type": "string",
          "description": "user id of sender"
        },
        "sent_on": {
          "type": "string",
          "format": "utc datetime"
        },
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "text",
            "photo",
            "video",
            "audio",
            "pdf",
            "other"
          ]
        }
      }
    },
    "TripModel": {
      "type": "object",
      "properties": {
        "tripId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "utc datetime"
        },
        "endDate": {
          "type": "string",
          "format": "utc datetime"
        },
        "langauges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "budgets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "destinations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "endDate": {
                "type": "string",
                "format": "utc datetime"
              },
              "country": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "mapLocation": {
                "type": "string"
              },
              "pictures": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                }
              },
              "startDate": {
                "type": "string",
                "format": "utc datetime"
              }
            }
          }
        },
        "members": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "memberId": {
                "type": "string"
              },
              "favorite": {
                "type": "boolean"
              },
              "intrestType": {
                "type": "string",
                "enum": [
                  "confirmed",
                  "unconfirmed"
                ]
              }
            }
          }
        },
        "intrests": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "utc datetime"
        },
        "updatedAt": {
          "type": "string",
          "format": "utc datetime"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "UserModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "format": "date-time"
        },
        "home_address": {
          "type": "object",
          "properties": {
            "country": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "zip_code": {
              "type": "string"
            }
          }
        },
        "gender": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "languages_speak": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bio": {
          "type": "string"
        },
        "looking_travel": {
          "type": "boolean"
        },
        "profile_pic": {
          "type": "string"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "details": {
                "type": "string"
              }
            },
            "description": "Social media connection object"
          }
        },
        "activity_intrests": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "favorite_snaps": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          }
        },
        "identity_verified": {
          "type": "boolean"
        },
        "identities": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "is_primary": {
                "type": "boolean"
              },
              "media_type": {
                "type": "string"
              },
              "verifid": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "media_path": {
                "type": "string"
              }
            }
          }
        },
        "plan_details": {
          "type": "object",
          "properties": {
            "coupon_details": {
              "type": "string"
            },
            "discount": {
              "type": "string"
            },
            "renew_policy": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "price_unit": {
              "type": "string"
            },
            "coupon_type": {
              "type": "string"
            },
            "price": {
              "type": "string"
            },
            "coupon_code": {
              "type": "string"
            },
            "expire_on": {
              "type": "string",
              "format": "utc datetime"
            },
            "name": {
              "type": "string"
            },
            "paid_amount": {
              "type": "string"
            },
            "purchase_date": {
              "type": "string",
              "format": "utc datetime"
            },
            "status": {
              "type": "string",
              "enum": [
                "new",
                "renew",
                "expire",
                "trial"
              ]
            }
          }
        },
        "billing_address": {
          "type": "object",
          "properties": {
            "country": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "zip_code": {
              "type": "string"
            }
          }
        },
        "billing_details": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "expriry": {
                "type": "string"
              },
              "cvv": {
                "type": "string"
              },
              "card_number": {
                "type": "string"
              },
              "is_prinary": {
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "master",
                  "visa"
                ]
              },
              "card_type": {
                "type": "string",
                "enum": [
                  "credit",
                  "debit"
                ]
              },
              "name_on_card": {
                "type": "string"
              }
            }
          }
        },
        "contries_intrests": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ratings": {
          "type": "number"
        }
      }
    },
    "pet": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "newPet": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    }
  },
  "swagger": "2.0",
  "info": {
    "version": "v1.0",
    "title": "Tripsha API documentation",
    "description": "This is complete API documentation of all the API",
    "termsOfService": "https://tripsha.com/terms/",
    "contact": {
      "name": "Tripsha API team",
      "email": "madanesanjay@yahoo.com",
      "url": "https://tripsha.com"
    }
  },
  "host": "localhost:3000",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/public/trips": {
      "get": {
        "description": "Returns list of trips for anonymous user",
        "operationId": "publicListTrips",
        "tags": [
          "Public Trips"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "#/definitions/TripModel"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/public/trips/{tripId}": {
      "get": {
        "description": "Returns single trip id for anonymous user",
        "operationId": "publicGetTrips",
        "tags": [
          "Public Trips"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "#/definitions/TripModel"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/trips": {
      "get": {
        "description": "Returns list of trips",
        "operationId": "listTrips",
        "tags": [
          "Trips"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "#/definitions/TripModel"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "post": {
        "description": "Creates a trip",
        "operationId": "createTrip",
        "tags": [
          "Trips"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Trip response",
            "schema": {
              "$ref": "#/definitions/TripModel"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/trips/{tripId}": {
      "get": {
        "description": "Returns a trip based on a trip ID",
        "operationId": "findTripById",
        "tags": [
          "Trips"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "#/definitions/TripModel"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "put": {
        "description": "updates a single trip based on the ID supplied and data",
        "operationId": "updateTrip",
        "tags": [
          "Trips"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of trip to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Trip deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete": {
        "description": "deletes a single trip based on the ID supplied",
        "operationId": "deleteTrip",
        "tags": [
          "Trips"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of trip to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Trip deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "Returns list of users",
        "operationId": "listUsers",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "#/definitions/UserModel"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "post": {
        "description": "Creates a user",
        "operationId": "createUser",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "#/definitions/UserModel"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "description": "Returns a user based on a user ID",
        "operationId": "findUserById",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "#/definitions/UserModel"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "put": {
        "description": "updates a single user based on the ID supplied and data",
        "operationId": "updateUser",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "user deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete": {
        "description": "deletes a single user based on the ID supplied",
        "operationId": "deleteUser",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "user deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    }
  }
}