{
  "openapi": "3.0.0",
  "info": {
    "version": "v1.0",
    "title": "Tripsha API documentation",
    "description": "This is complete API documentation of all the API",
    "termsOfService": "https://tripsha.com/terms/",
    "contact": {
      "name": "Tripsha API Team",
      "email": "madanesanjay@yahoo.com",
      "url": "https://tripsha.com"
    }
  },
  "servers": [
    {
      "url": "https://dev-api.tripsha.com"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "schemas": {
      "CountryModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the country"
          },
          "name": {
            "type": "string",
            "description": "Name of country"
          }
        }
      },
      "MemberModel": {
        "type": "object",
        "properties": {
          "tripId": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "isFavorite": {
            "type": "boolean",
            "description": "If `true`, the user has saved this trip for future reference",
            "enum": [true, false]
          },
          "isMember": {
            "type": "boolean",
            "description": "Is member of the trip, if `true` then counted as active member of the trip",
            "enum": [true, false]
          },
          "isActive": {
            "type": "boolean",
            "description": "If `isMember=true` then this value applies",
            "enum": [true, false]
          },
          "isOwner": {
            "type": "boolean",
            "description": "Member is owner of the trip or not",
            "enum": [true, false]
          },
          "updatedAt": {
            "type": "number",
            "format": "Unix timestamp",
            "description": "The last time user interacted with the trip"
          }
        }
      },
      "MessageModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "toMemberId": {
            "type": "string",
            "description": "user id of receiver"
          },
          "fromMemberId": {
            "type": "string",
            "description": "user id of sender"
          },
          "sentOn": {
            "type": "number",
            "format": "unix timestamp"
          },
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["text"]
          }
        }
      },
      "MyTripModel": {
        "type": "object",
        "properties": {
          "tripId": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "utc datetime"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "isOwner": {
            "type": "boolean"
          },
          "memberStatus": {
            "type": "string"
          }
        }
      },
      "CommonErrorFormat": {
        "type": "object",
        "required": ["status", "result"],
        "properties": {
          "status": {
            "type": "string",
            "default": "error"
          },
          "result": {
            "type": "object",
            "required": ["errorCode", "message"],
            "properties": {
              "errorCode": {
                "type": "string",
                "description": "Error code to handle internationalization(i18)"
              },
              "message": {
                "type": "string",
                "description": "Error message in english"
              },
              "field": {
                "type": "string",
                "description": "Error field name"
              }
            }
          }
        }
      },
      "CommonSuccessFormat": {
        "type": "object",
        "required": ["status", "result"],
        "properties": {
          "status": {
            "type": "string",
            "default": "success"
          },
          "result": {
            "type": "string",
            "default": "success"
          }
        }
      },
      "TagModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the tag"
          }
        }
      },
      "TripModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "destinations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "startDate": {
            "type": "date",
            "format": "YYYYMMDD"
          },
          "endDate": {
            "type": "date",
            "format": "YYYYMMDD"
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["english"]
            }
          },
          "budgets": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["$", "$$", "$$$", "$$$$", "$$$$$"]
            }
          },
          "spotFilledRank": {
            "type": "integer"
          },
          "tripLength": {
            "type": "integer"
          },
          "groupSize": {
            "type": "integer"
          },
          "minGroupSize": {
            "type": "integer"
          },
          "maxGroupSize": {
            "type": "integer"
          },
          "interests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pictureUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isPublic": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "isFull": {
            "type": "boolean",
            "desciption": "groupsize=maxGroupSize"
          },
          "isArchived": {
            "type": "number",
            "description": "Trip is expired, startDate less than todays date.",
            "enum": [1, 0]
          },
          "createdAt": {
            "type": "number",
            "format": "unix timestamp"
          },
          "updatedAt": {
            "type": "number",
            "format": "unix timestamp"
          },
          "ownerId": {
            "type": "string"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "avatarUrl": {
                "type": "string"
              }
            }
          }
        }
      },
      "UserModel": {
        "type": "object",
        "required": ["username", "email"],
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dob": {
            "type": "date",
            "format": "YYYYMMDD"
          },
          "livesIn": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female", "other"]
          },
          "spokenLanguages": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "isLookingForTravel": {
            "type": "boolean"
          },
          "avatarUrl": {
            "type": "string"
          },
          "interests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bucketList": {
            "type": "string",
            "desciption": "List of interested countries"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "desciption": "Datetime"
          },
          "updatedAt": {
            "type": "string",
            "desciption": "Datetime"
          }
        }
      },
      "SendMessage": {
        "properties": {
          "toMemberId": {
            "type": "string",
            "required": true
          },
          "message": {
            "type": "string",
            "required": true
          },
          "messsageType": {
            "type": "string",
            "enum": ["text"]
          }
        }
      },
      "CreateUpdateTrip": {
        "properties": {
          "title": {
            "type": "string",
            "required": true
          },
          "description": {
            "type": "string",
            "required": true
          },
          "destinations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "minGroupSize": {
            "type": "number",
            "required": true
          },
          "maxGroupSize": {
            "type": "number",
            "required": true
          },
          "startDate": {
            "type": "string",
            "format": "YYYYMMDD",
            "required": true
          },
          "endDate": {
            "type": "string",
            "format": "YYYYMMDD",
            "required": true
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "budgets": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["$", "$$", "$$$", "$$$$", "$$$$$"]
            }
          },
          "connections": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pictureUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "interests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isPublic": {
            "type": "boolean"
          }
        }
      }
    },
    "parameters": {
      "pathUserId": {
        "name": "userId",
        "in": "path",
        "description": "Id of the user",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "pathTripId": {
        "name": "tripId",
        "in": "path",
        "description": "Id of the trip",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "queryMemberId": {
        "name": "memberId",
        "in": "query",
        "description": "Id of the user",
        "schema": {
          "type": "string"
        }
      },
      "queryUserId": {
        "name": "userId",
        "in": "query",
        "description": "Id of the user",
        "schema": {
          "type": "string"
        }
      },
      "queryPage": {
        "name": "page",
        "in": "query",
        "description": "Page number of pagination",
        "schema": {
          "type": "number",
          "default": 0
        }
      },
      "queryMatchExact": {
        "name": "matchExactDate",
        "in": "query",
        "description": "Match `startDate` and `endDate` exact",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "queryLimit": {
        "name": "limit",
        "in": "query",
        "description": "Limit of the records on a each page",
        "schema": {
          "type": "number",
          "default": 25,
          "minimum": 25,
          "maximum": 100
        }
      },
      "querySortByUser": {
        "name": "sortBy",
        "in": "query",
        "description": "Sort by username",
        "schema": {
          "type": "string",
          "default": "username",
          "enum": ["username"]
        }
      },
      "querySortByTrip": {
        "name": "sortBy",
        "in": "query",
        "description": "Sort by key",
        "schema": {
          "type": "string",
          "default": "updatedAt",
          "enum": ["updatedAt", "startDate", "spotsFilled"]
        }
      },
      "querySortOrder": {
        "name": "sortOrder",
        "in": "query",
        "description": "Sort order applied on `sortBy` fields",
        "schema": {
          "type": "number",
          "enum": [1, -1],
          "default": -1
        }
      },
      "querySearch": {
        "name": "search",
        "in": "query",
        "description": "Search filter",
        "schema": {
          "type": "string"
        }
      },
      "queryMinGroupSize": {
        "name": "minGroupSize",
        "in": "query",
        "description": "Search for minGroupSize",
        "schema": {
          "type": "number"
        }
      },
      "queryMaxGroupSize": {
        "name": "maxGroupSize",
        "in": "query",
        "description": "Search for maxGroupSize",
        "schema": {
          "type": "number"
        }
      },
      "queryMinStartDate": {
        "name": "startDate",
        "in": "query",
        "description": "Search for minStartDate. Format: `YYYYMMDD`",
        "schema": {
          "type": "date",
          "format": "YYYYMMDD"
        }
      },
      "queryMaxEndDate": {
        "name": "endDate",
        "in": "query",
        "description": "Search for maxEndDate. Format: `YYYYMMDD`",
        "schema": {
          "type": "date",
          "format": "YYYYMMDD"
        }
      },
      "queryMinTripLength": {
        "name": "minTripLength",
        "in": "query",
        "description": "Search for minTripLength",
        "schema": {
          "type": "number"
        }
      },
      "queryMaxTripLength": {
        "name": "maxTripLength",
        "in": "query",
        "description": "Search for maxTripLength",
        "schema": {
          "type": "number"
        }
      },
      "queryInterests": {
        "name": "interests",
        "in": "query",
        "description": "Search for interests, comma separated values. Ex. value1,value2",
        "schema": {
          "type": "string"
        }
      },
      "queryDestinations": {
        "name": "destinations",
        "in": "query",
        "description": "Search for destinations, comma separated values. Ex. value1,value2",
        "schema": {
          "type": "string"
        }
      },
      "MemberAction": {
        "in": "body",
        "name": "body",
        "description": "Perform Member Actions",
        "required": true,
        "schema": {
          "properties": {
            "tripId": {
              "type": "string",
              "required": true
            },
            "memberIds": {
              "type": "array",
              "required": true,
              "items": {
                "type": "string"
              }
            },
            "action": {
              "type": "string",
              "required": true,
              "enum": [
                "addMember",
                "makeFavorite",
                "removeMember",
                "makeUnFavorite"
              ]
            }
          }
        }
      },
      "SendMessage": {
        "in": "body",
        "name": "body",
        "description": "Create trip payload",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SendMessage"
        }
      },
      "createTrip": {
        "in": "body",
        "name": "body",
        "description": "Create trip payload",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/CreateUpdateTrip"
        }
      },
      "updateTrip": {
        "in": "body",
        "name": "body",
        "description": "Update trip payload",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/CreateUpdateTrip"
        }
      },
      "createUser": {
        "in": "body",
        "name": "body",
        "description": "Create user payload",
        "required": true,
        "schema": {
          "properties": {
            "email": {
              "type": "string"
            },
            "dob": {
              "type": "number",
              "format": "YYYYMMDD",
              "description": "Date of birth in `YYYYMMDD` format"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            }
          }
        }
      },
      "updateUser": {
        "in": "body",
        "name": "body",
        "description": "Update user payload",
        "required": true,
        "schema": {
          "properties": {
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "userId": {
              "type": "string"
            },
            "dob": {
              "type": "date",
              "format": "YYYYMMDD"
            },
            "livesIn": {
              "type": "string"
            },
            "gender": {
              "type": "string"
            },
            "spokenLanguages": {
              "type": "string",
              "description": "List of languages user can speak separated by comma"
            },
            "bio": {
              "type": "string"
            },
            "isLookingForTravel": {
              "type": "boolean"
            },
            "avatarUrl": {
              "type": "string"
            },
            "interests": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "bucketList": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "checkUserExists": {
        "in": "body",
        "name": "body",
        "description": "Check user exists payload",
        "required": true,
        "schema": {
          "properties": {
            "username": {
              "type": "string"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    },
    "examples": {
      "trip-error": {
        "status": "error",
        "result": [
          {
            "type": "required",
            "message": "Title field is required",
            "field": "title"
          }
        ]
      }
    }
  },
  "paths": {
    "/countries": {
      "get": {
        "description": "Return list of matching countries",
        "operationId": "listCountries",
        "tags": ["Countries"],
        "parameters": [
          {
            "$ref": "#/components/parameters/querySearch"
          },
          {
            "$ref": "#/components/parameters/queryPage"
          },
          {
            "$ref": "#/components/parameters/queryLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "Countries response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CountryModel"
                          }
                        },
                        "count": {
                          "type": "number",
                          "description": "Count of the current records"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trips/{tripId}/members": {
      "get": {
        "description": "Returns list of trip members",
        "operationId": "listMembers",
        "tags": ["Trips"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pathTripId"
          },
          {
            "$ref": "#/components/parameters/queryPage"
          },
          {
            "$ref": "#/components/parameters/queryLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "Members response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "type": "object",
                      "required": ["totalCount", "count", "data"],
                      "properties": {
                        "totalCount": {
                          "type": "number",
                          "description": "Total number of records"
                        },
                        "count": {
                          "type": "number",
                          "description": "Current number of records"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MemberModel"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      }
    },
    "/member/actions": {
      "post": {
        "description": "Perform various operations on a member",
        "operationId": "memberActions",
        "tags": ["Members"],
        "parameters": [
          {
            "$ref": "#/components/parameters/MemberAction"
          }
        ],
        "responses": {
          "200": {
            "description": "Members response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "type": "string",
                      "default": "success"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      }
    },
    "/messages": {
      "get": {
        "description": "Returns list of user messages",
        "operationId": "listMessages",
        "tags": ["Messages"],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryMemberId"
          },
          {
            "$ref": "#/components/parameters/queryPage"
          },
          {
            "$ref": "#/components/parameters/queryLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "Messages response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "type": "object",
                      "required": ["totalCount", "count", "data"],
                      "properties": {
                        "totalCount": {
                          "type": "number",
                          "description": "Total number of records"
                        },
                        "count": {
                          "type": "number",
                          "description": "Current records count"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MessageModel"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      }
    },
    "/conversations": {
      "get": {
        "description": "Returns list of conversations",
        "operationId": "listConversations",
        "tags": ["Messages"],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryPage"
          },
          {
            "$ref": "#/components/parameters/queryLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "Conversations response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "type": "object",
                      "required": ["totalCount", "count", "data"],
                      "properties": {
                        "totalCount": {
                          "type": "number",
                          "description": "Total number of records"
                        },
                        "count": {
                          "type": "number",
                          "description": "Current number of records"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/UserModel"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      }
    },
    "/send-message": {
      "post": {
        "description": "Send message",
        "operationId": "sendmessage",
        "tags": ["Messages"],
        "parameters": [
          {
            "$ref": "#/components/parameters/SendMessage"
          }
        ],
        "responses": {
          "200": {
            "description": "Message response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "description": "Return list of matching interest tags",
        "operationId": "listTags",
        "tags": ["Tags"],
        "parameters": [
          {
            "$ref": "#/components/parameters/querySearch"
          }
        ],
        "responses": {
          "200": {
            "description": "Tags response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TagModel"
                          }
                        },
                        "count": {
                          "type": "number",
                          "description": "Count of the current records"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trip-tags": {
      "get": {
        "description": "Return list of matching trip tags",
        "operationId": "listTripTags",
        "tags": ["Tags"],
        "parameters": [
          {
            "$ref": "#/components/parameters/querySearch"
          }
        ],
        "responses": {
          "200": {
            "description": "Tags response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TagModel"
                          }
                        },
                        "count": {
                          "type": "number",
                          "description": "Count of the current records"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trips": {
      "get": {
        "description": "Returns list of trips",
        "operationId": "listTrips",
        "tags": ["Trips"],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryPage"
          },
          {
            "$ref": "#/components/parameters/queryLimit"
          },
          {
            "$ref": "#/components/parameters/querySortBy"
          },
          {
            "$ref": "#/components/parameters/querySortOrder"
          },
          {
            "$ref": "#/components/parameters/queryMinGroupSize"
          },
          {
            "$ref": "#/components/parameters/queryMaxGroupSize"
          },
          {
            "$ref": "#/components/parameters/queryMinStartDate"
          },
          {
            "$ref": "#/components/parameters/queryMatchExact"
          },
          {
            "$ref": "#/components/parameters/queryMaxEndDate"
          },
          {
            "$ref": "#/components/parameters/queryMinTripLength"
          },
          {
            "$ref": "#/components/parameters/queryMaxTripLength"
          },
          {
            "$ref": "#/components/parameters/queryInterests"
          },
          {
            "$ref": "#/components/parameters/queryDestinations"
          }
        ],
        "responses": {
          "200": {
            "description": "Trip response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "description": "Current records count"
                        },
                        "total": {
                          "type": "number",
                          "description": "Total number of records."
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TripModel"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a trip",
        "operationId": "createTrip",
        "tags": ["Trips"],
        "parameters": [
          {
            "$ref": "#/components/parameters/createTrip"
          }
        ],
        "responses": {
          "200": {
            "description": "Trip response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string",
                      "description": "Trip id"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      }
    },
    "/mytrips": {
      "get": {
        "description": "Returns list of my trips",
        "operationId": "myTrips",
        "tags": ["Trips"],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryNextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Trip response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records"
                        },
                        "count": {
                          "type": "number",
                          "description": "Current records count."
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TripModel"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/saved-trips": {
      "get": {
        "description": "Returns list of saved trips",
        "operationId": "savedTrips",
        "tags": ["Trips"],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryNextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Trip response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "totalCount": {
                          "type": "number",
                          "description": "Total number of records"
                        },
                        "count": {
                          "type": "number",
                          "description": "Current records count."
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TripModel"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      }
    },
    "/trips/{tripId}": {
      "get": {
        "description": "Returns a trip based on a trip ID",
        "operationId": "findTripById",
        "tags": ["Trips"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pathTripId"
          }
        ],
        "responses": {
          "200": {
            "description": "Trip response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "$ref": "#/components/schemas/TripModel"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Updates a single trip based on the ID supplied and data",
        "operationId": "updateTrip",
        "tags": ["Trips"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pathTripId"
          },
          {
            "$ref": "#/components/parameters/updateTrip"
          }
        ],
        "responses": {
          "204": {
            "description": "Trip updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonSuccessFormat"
                }
              }
            }
          },
          "default": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "deletes a single trip based on the ID supplied",
        "operationId": "deleteTrip",
        "tags": ["Trips"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pathTripId"
          }
        ],
        "responses": {
          "204": {
            "description": "Trip deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonSuccessFormat"
                }
              }
            }
          },
          "default": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "Returns list of users",
        "operationId": "listUsers",
        "tags": ["Users"],
        "parameters": [
          {
            "$ref": "#/components/parameters/querySearch"
          },
          {
            "$ref": "#/components/parameters/querySortByUser"
          },
          {
            "$ref": "#/components/parameters/querySortOrder"
          },
          {
            "$ref": "#/components/parameters/queryPage"
          },
          {
            "$ref": "#/components/parameters/queryLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "type": "object",
                      "required": ["total", "data"],
                      "properties": {
                        "count": {
                          "type": "number",
                          "description": "Current page count."
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "firstName": {
                                "type": "string"
                              },
                              "lastName": {
                                "type": "string"
                              },
                              "avatarUrl": {
                                "type": "string"
                              },
                              "isActive": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a user",
        "operationId": "createUser",
        "tags": ["Users"],
        "parameters": [
          {
            "$ref": "#/components/parameters/createUser"
          }
        ],
        "responses": {
          "200": {
            "description": "Create User response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "type": "string",
                      "default": "User id"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      }
    },
    "/users/check-user-exists": {
      "post": {
        "description": "Check username exists",
        "operationId": "checkExists",
        "tags": ["Users"],
        "parameters": [
          {
            "$ref": "#/components/parameters/checkUserExists"
          }
        ],
        "responses": {
          "200": {
            "description": "User status",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "userExists": {
                          "type": "boolean",
                          "description": "User exists"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "description": "Returns a user based on a user ID",
        "operationId": "findUserById",
        "tags": ["Users"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pathUserId"
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "result"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "result": {
                      "$ref": "#/components/schemas/UserModel"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Updates a single user based on the ID supplied and data",
        "operationId": "updateUser",
        "tags": ["Users"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pathUserId"
          },
          {
            "$ref": "#/components/parameters/updateUser"
          }
        ],
        "responses": {
          "204": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonSuccessFormat"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a single user based on the ID supplied",
        "operationId": "deleteUser",
        "tags": ["Users"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pathUserId"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonSuccessFormat"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonErrorFormat"
                }
              }
            }
          }
        }
      }
    }
  }
}
