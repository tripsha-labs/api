paths:
  /public/trips:
    get:
      description: Returns list of trips for anonymous user
      operationId: publicListTrips
      tags:
        - Public Trips
      produces:
        - application/json        
      parameters:
        - name: userId
          in: path
          description: ID of user to fetch
          required: true
          type: string
      responses:
        '200':
          description: User response
          schema:
            $ref: '#/definitions/TripModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /public/trips/{tripId}:
    get:
      description: Returns single trip id for anonymous user
      operationId: publicGetTrips
      tags:
        - Public Trips
      produces:
        - application/json        
      parameters:
        - name: userId
          in: path
          description: ID of user to fetch
          required: true
          type: string
      responses:
        '200':
          description: User response
          schema:
            $ref: '#/definitions/TripModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /trips:
    get:
      description: Returns list of trips
      operationId: listTrips
      tags:
        - Trips
      produces:
        - application/json        
      parameters:
        - name: userId
          in: path
          description: ID of user to fetch
          required: true
          type: string
      responses:
        '200':
          description: User response
          schema:
            $ref: '#/definitions/TripModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      description: Creates a trip
      operationId: createTrip
      tags:
        - Trips
      produces:
        - application/json        
      parameters:
        - name: userId
          in: path
          description: ID of user to fetch
          required: true
          type: string
      responses:
        '200':
          description: Trip response
          schema:
            $ref: '#/definitions/TripModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /trips/{tripId}:
    get:
      description: Returns a trip based on a trip ID
      operationId: findTripById
      tags:
        - Trips
      produces:
        - application/json        
      parameters:
        - name: userId
          in: path
          description: ID of user to fetch
          required: true
          type: string
      responses:
        '200':
          description: User response
          schema:
            $ref: '#/definitions/TripModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      description: updates a single trip based on the ID supplied and data
      operationId: updateTrip
      tags:
        - Trips
      parameters:
        - name: userId
          in: path
          description: ID of trip to update
          required: true
          type: string
      responses:
        '204':
          description: Trip deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      description: deletes a single trip based on the ID supplied
      operationId: deleteTrip
      tags:
        - Trips
      parameters:
        - name: userId
          in: path
          description: ID of trip to delete
          required: true
          type: string
      responses:
        '204':
          description: Trip deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

definitions:
  pet:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      tag:
        type: string
  newPet:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      tag:
        type: string